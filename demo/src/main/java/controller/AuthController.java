package controller;

import entity.Donor;
import entity.Recipient;
import entity.UserData;
import lombok.RequiredArgsConstructor;
import service.DonorService;
import service.RecipientService;
import service.UserService;
import view.AdminView;
import view.DonorView;
import view.RecipientView;
import org.springframework.stereotype.Controller;

import java.util.Optional;
import java.util.Scanner;

@Controller
@RequiredArgsConstructor
public class AuthController {
    private final UserService userService;
    private final DonorService donorService;
    private final RecipientService recipientService;
    private final AdminView adminView;
    private final DonorView donorView;
    private final RecipientView recipientView;

    private final Scanner scanner = new Scanner(System.in);

    public void start() {
        while (true) {
            System.out.println("\n\uD83D\uDCCC –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:");
            System.out.println("1Ô∏è‚É£ - –í—Ö—ñ–¥");
            System.out.println("2Ô∏è‚É£ - –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è");
            System.out.println("3Ô∏è‚É£ - –í–∏—Ö—ñ–¥");
            System.out.print("üîπ –í–∞—à –≤–∏–±—ñ—Ä: ");

            String input = scanner.nextLine();
            if (!input.matches("\\d+")) {
                System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–≤—ñ–¥. –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ.");
                continue;
            }

            int choice = Integer.parseInt(input);

            switch (choice) {
                case 1 -> loginUser();
                case 2 -> registerUser();
                case 3 -> exitProgram();
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        }
    }

    private void loginUser() {
        System.out.print("\n\uD83D\uDC64 –í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω: ");
        String username = scanner.nextLine().trim();
        System.out.print("\uD83D\uDD11 –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        Optional<UserData> userOptional = userService.getUserByUsername(username);

        if (userOptional.isPresent()) {
            UserData user = userOptional.get();
            if (user.getPassword().equals(password)) {
                System.out.println("‚úÖ –í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π!");

                switch (user.getRole().toUpperCase()) {
                    case "ADMIN" -> adminView.showMenu(user.getId(), user.getUsername());
                    case "DONOR" -> {
                        Optional<Donor> donorOptional = donorService.getDonorById(user.getId());
                        if (donorOptional.isPresent()) {
                            donorView.showMenu(donorOptional.get(), user);
                        } else {
                            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –¥–æ–Ω–æ—Ä–∞.");
                        }
                    }
                    case "RECIPIENT" -> {
                        Optional<Recipient> recipientOptional = recipientService.getRecipientById(user.getId());
                        if (recipientOptional.isPresent()) {
                            recipientView.showMenu(recipientOptional.get(), user);
                        } else {
                            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é —Ä–µ—Ü–∏–ø—ñ—î–Ω—Ç–∞.");
                        }
                    }
                    default -> System.out.println("\uD83D\uDC64 –í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫ " + user.getRole() + ". –ù–µ–º–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –º–µ–Ω—é.");
                }
            } else {
                System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å.");
            }
        } else {
            System.out.println("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π.");
        }
    }

    private void registerUser() {
        System.out.print("\n\uD83C\uDD95 –í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω: ");
        String username = scanner.nextLine().trim();
        System.out.print("\uD83D\uDD10 –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        String role = null;
        while (role == null) {
            System.out.println("\uD83C\uDFBE –û–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å:");
            System.out.println("1 - –ê–¥–º—ñ–Ω");
            System.out.println("2 - –î–æ–Ω–æ—Ä");
            System.out.println("3 - –†–µ—Ü–∏–ø—ñ—î–Ω—Ç");
            System.out.print("–í–∞—à –≤–∏–±—ñ—Ä: ");

            String input = scanner.nextLine();
            switch (input) {
                case "1" -> role = "ADMIN";
                case "2" -> role = "DONOR";
                case "3" -> role = "RECIPIENT";
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        }

        boolean success = userService.registerUser(username, password, role);
        if (success) {
            System.out.println("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞.");
        } else {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –ú–æ–∂–ª–∏–≤–æ, –ª–æ–≥—ñ–Ω –≤–∂–µ —ñ—Å–Ω—É—î.");
        }
    }

    private void exitProgram() {
        System.out.println("\uD83D\uDC4B –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!");
        System.exit(0);
    }
}